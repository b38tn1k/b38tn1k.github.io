{
  "title" : "<h1>Toy Neural Net</h1>",

  "intro": "<h1>Toy Neural Net</h1><p>This program tries to recognise patterns or shapes.<ul><li>Click  <a onclick=\"setupDemo()\" ><strong>here</strong></a> to load a handmade example.</li><li>Use the boxes below to draw in your own patterns. Click <a onclick=\"showTutorialDiv()\" ><strong>here</strong></a> to learn how. </li> <li>Click <a onclick=\"generateShape()\" ><strong>here</strong></a> to generate a random set of patterns.</li></p></ul>",

  "tutorial": "<h1>Drawing Tutorial</h1> <p>Click <a onclick=\"hideTutorialDiv()\" ><strong>here</strong></a> to close this window.</p><p>Draw patterns by clicking on the boxes to toggle the pixel color.</p><img src=\"example.png\" alt=\"example\"> <p>In the above example there are three '+' symbol drawings and 3 different drawings. The '+' symbol is the target pattern.</p><p>The target patterns are marked by clicking the tall rectangle on the right hand side of each drawing area. <ul><li>A <strong>white</strong> rectangle means the drawing is a target pattern.</li> <li>A <strong>blue</strong> rectangle means the drawing is not a target pattern.</li></ul></p><p>It is important to provide the neural network with examples of what the pattern is, and examples of what the pattern is not. Three of each is a nice balance but feel free to experiment!</p><p>You will also have to draw some test patterns in the boxes below the generated patterns.</p><img src=\"testexample.png\" alt=\"example\"><p>An example of the pattern and a counter example should provide useful feedback.</p>",

  "generated": "<p>The neural network can learn the target pattern better when it has more examples. By shifting the patterns around and adding or removing pixels, we can create a larger set of learning examples.</p><p>Click <a onclick=\"setupGenerates()\" ><strong>here</strong></a> to show some of the generated examples</p>",

  "test": "<p>To test the pattern recognition, add a pattern similar to the example pattern and a pattern that is not similar. If you loaded demo, the similar pattern should be on the left and the less similar pattern on the right.</p>",

  "weights": "<p>A neural network uses an array of initially random numbers, called weights, recognise to a pattern. Training the neural network aims to change the values of the weights so the neural network becomes better at both recognizing the pattern, and ignoring other patterns. This example uses two layers (two stages of 'thinking'), each with its own set of weights.</p>",

  "conclusion": "<p>Click <a onclick=\"doNN(1)\"><strong>here</strong></a> to train once. Click <a onclick=\"doNN(10)\"><strong>here</strong></a> to train 10 times.</p><p>If all goes well, the test example pattern should have a higher similarity score than the test pattern that is dissimilar. The right hand side rectangles change color: <ul><li>More blue means the pattern is more similar to the example patterns.</li> <li>More white means less similar</li></ul><p>Train a few more times and see what happens. Overtraining and undertraining can both cause failures.</p><p> If it did not work, you can try training a few more times, or change the test patterns (especially if you randomly generated patterns), or click <a onclick=\"resetWeights()\"><strong>here</strong></a> to reset the weights and train again from the beginning.</p>",



  "troubleshooting": "<h1>Troubleshooting</h1><p>The weights </p><p>Click <a onclick=\"hideTroubleDiv()\" ><strong>here</strong></a> to close this window.</p> <p>Click <a onclick=\"showTroubleDiv()\"><strong>here</strong></a> for more tips.</p>"
}
