var printStack = true;
var clickDebug = true;
var showDev = true;
var showFPS = true;
// printStack = false;
clickDebug = false;
showDev = false;
showFPS = false;

var B_UNSET = 0;
var B_TRUE = 1;
var B_FALSE = 2;

var RM_NORMAL = 0;
var RM_CREATE = 1;
var RM_PRESENT = 2;

var M_IDLE = 0;
var M_MOVE = 1;
var M_RESIZE = 2;
var M_DELETE = 3;
var M_SELECTED = 4;
var M_EXPAND_OR_COLLAPSE = 5;
var M_START = 6;
var M_NEW = 7;
var M_COPY = 8;
var M_MUTATE = 9;

var V_NUMBER = 0;
var V_STRING = 1;
var V_BOOL = 2;

var TST_OFF = 0;
var TST_LOAD = 1;
var TST_TIDY = 2;
var TST_RUN = 3;
var TST_PAUSE = 4;

var T_START = 1;
var T_STOP = 105;
var T_COMMENT = 3;
var T_BLOCK = 23;
var T_LEN = 6;
var T_GET = 8;
var T_RUN = 53;
var T_SET = 10;
var T_VAR = 45;
var T_INPUT = 47;
var T_CONST = 46;
var T_IF = 30;
var T_WHILE = 7;
var T_EQUAL = 48;
var T_LESS = 9;
var T_GREATER = 38;
var T_ADD = 11;
var T_SUBTRACT = 52;
var T_MULT = 13;
var T_DIV = 14;
var T_MOD = 32;
var T_AVERAGE = 33;
var T_SQRT = 34;
var T_HYPOT = 35;
var T_GOTO = 16;
var T_NOT = 28;
var T_COS = 24;
var T_SIN = 26;
var T_CONDITION = 103;
var T_RANGE = 150;
var T_ELSE = 102;
var T_DO = 101;
var T_OUTLET = 104;
var T_ASSIGN = 42;
var T_CONSOLE = 2;
var T_PRINT = 27;
var T_TURTLE = 0;
var T_INLET = 201;
var T_ROUND = 4;
var T_PUSH = 41;
var T_DELETE = 44;
var T_FOR = 51;
var T_INDEX = 222;
var T_REF = 223;
var T_LAYOUT_BLOCK = 666;

var backupObject;
var zoomMode = false;
var mobileDeviceDetected = false;
var selectChanged = true;
var fontSizeString = '12px';
var doJLOG = false;
var doJLOGCountDown = 0;
var bgGrid, widthOnTwo, heightOnTwo, cells, c, shareLinkString, pres;
var myDivs = {};
var xPos, yPos, xStart, yStart, xOff, yOff, doMouseDrag;
var allColors = {};
var showBlockMenu = false;
var showDemoMenu = false;
var showUtils = false;
var shareLinkGenerated = false;
var slowMode = false;
var fastMode = false;
var speedMode = 0;
var flash = true;
var gridSize = 20;
var demos = [];
var mobileHType;
var mobileHAddon = false;
var tidyFlag = 0;
var expandMenu = true;
var submenu = 0;
var currentTestIndex = 0;
var testPacer = 0;
var testPaceSettings = [0, 0, 0, 500, 500];
var testTimer = TST_OFF;
var testLoop = false;
var tutorial = false;
var tutorialstring = '';
var hideMenu = false;
var disableDrag = false;
var mainDiv;
let logCounter = 0;
var redrawCounter = 0;
var notIdle = true;
var noClickZone = [0, 0, 0, 0];
var clearCellFlag = 0;
var speedButton, flashButton;
var showGUI = true;
var presentationMode = false;
var presCreationMode = false;
var autoStart = false;
var presentationDivs = {};
var runMode = RM_NORMAL;


var turtleVars = ['turtleX', 'turtleY', 'turtleDraw'];
var everyone = [T_COMMENT, T_CONST, T_BLOCK, T_VAR, T_INPUT, T_IF, T_WHILE, T_EQUAL, T_LESS, T_GREATER, T_ADD, T_SUBTRACT, T_MULT, T_DIV, T_MOD, T_GOTO, T_NOT, T_CONDITION, T_ELSE, T_DO, T_OUTLET, T_ASSIGN, T_PRINT, T_AVERAGE, T_SQRT, T_HYPOT, T_SIN, T_COS, T_LEN, T_GET, T_SET, T_START, T_CONSOLE, T_ROUND, T_PUSH, T_DELETE, T_FOR, T_RUN];
var userBlocks = [T_BLOCK, T_GOTO, T_INPUT, T_VAR, T_CONST, T_ASSIGN, T_IF, T_WHILE, T_NOT, T_EQUAL, T_LESS, T_GREATER, T_ADD, T_SUBTRACT, T_MULT, T_DIV, T_MOD, T_AVERAGE, T_SQRT, T_HYPOT, T_PRINT, T_COMMENT, T_COS, T_SIN, T_TURTLE, T_LEN, T_GET, T_SET, T_ROUND, T_PUSH, T_DELETE, T_FOR, T_RUN];
var notStartOrConsole = [T_COMMENT, T_CONST, T_VAR, T_IF, T_WHILE, T_EQUAL, T_LESS, T_GREATER, T_ADD, T_SUBTRACT, T_MULT, T_DIV, T_MOD, T_GOTO, T_NOT, T_CONDITION, T_ELSE, T_DO, T_OUTLET, T_ASSIGN, T_PRINT, T_AVERAGE, T_SQRT, T_HYPOT, T_SIN, T_COS, T_LEN, T_GET, T_SET, T_ROUND, T_PUSH, T_DELETE, T_FOR, T_RUN];
var notStartOrConsoleOrSpecial = [T_COMMENT, T_CONST, T_VAR, T_IF, T_WHILE, T_EQUAL, T_LESS, T_GREATER, T_ADD, T_SUBTRACT, T_MULT, T_DIV, T_MOD, T_GOTO, T_NOT, T_ASSIGN, T_PRINT, T_AVERAGE, T_SQRT, T_HYPOT, T_SIN, T_COS, T_LEN, T_GET, T_SET, T_ROUND, T_PUSH, T_DELETE, T_FOR, T_RUN];
var numberyOnes = [T_OUTLET, T_COMMENT, T_CONST, T_VAR, T_ADD, T_SUBTRACT, T_MULT, T_DIV, T_MOD, T_AVERAGE, T_SQRT, T_HYPOT, T_COS, T_SIN, T_LEN, T_GET, T_ROUND];
var boolyOnes = [T_COMMENT, T_NOT, T_EQUAL, T_GREATER, T_LESS];
var conditionallyOnes = boolyOnes.concat(numberyOnes.slice(1));
var presComponents = [T_INPUT, T_CONST];

var mathFunctions = [T_ADD, T_SUBTRACT, T_MULT, T_DIV, T_MOD, T_AVERAGE, T_SQRT, T_HYPOT, T_SIN, T_COS, T_ROUND];
var boolFunctions = [T_NOT, T_EQUAL, T_GREATER, T_LESS];
var utilities = [T_COMMENT, T_PRINT, T_TURTLE];
var conditionals = [T_IF, T_WHILE, T_FOR];
var containers = [T_BLOCK, T_INPUT, T_CONST,];
var handles = [T_GOTO, T_VAR, T_ASSIGN];
var arrayTools = [T_LEN, T_GET, T_SET, T_PUSH, T_DELETE, T_RUN];

var blockMenuDict = {};
blockMenuDict['data containers'] = containers;
blockMenuDict['data references'] = handles;
blockMenuDict['array tools'] = arrayTools;
blockMenuDict['math'] = mathFunctions;
blockMenuDict['comparisons'] = boolFunctions;
blockMenuDict['conditionals'] = conditionals;
blockMenuDict['utilities'] = utilities;




var blockConfig = {};
blockConfig[T_BLOCK] = {};
blockConfig[T_GOTO] = {};
blockConfig[T_VAR] = {};
blockConfig[T_INPUT] = {};
blockConfig[T_IF] = {};
blockConfig[T_WHILE] = {};
blockConfig[T_EQUAL] = {};
blockConfig[T_LESS] = {};
blockConfig[T_GREATER] = {};
blockConfig[T_ADD] = {};
blockConfig[T_HYPOT] = {};
blockConfig[T_AVERAGE] = {};
blockConfig[T_SQRT] = {};
blockConfig[T_SUBTRACT] = {};
blockConfig[T_MULT] = {};
blockConfig[T_DIV] = {};
blockConfig[T_MOD] = {};
blockConfig[T_NOT] = {};
blockConfig[T_CONDITION] = {};
blockConfig[T_RANGE] = {};
blockConfig[T_ELSE] = {};
blockConfig[T_DO] = {};
blockConfig[T_OUTLET] = {};
blockConfig[T_START] = {};
blockConfig[T_STOP] = {};
blockConfig[T_ASSIGN] = {};
blockConfig[T_CONSOLE] = {};
blockConfig[T_PRINT] = {};
blockConfig[T_COMMENT] = {};
blockConfig[T_CONST] = {};
blockConfig[T_TURTLE] = {};
blockConfig[T_INLET] = {};
blockConfig[T_SIN] = {};
blockConfig[T_COS] = {};
blockConfig[T_LEN] = {};
blockConfig[T_GET] = {};
blockConfig[T_RUN] = {};
blockConfig[T_SET] = {};
blockConfig[T_ROUND] = {};
blockConfig[T_PUSH] = {};
blockConfig[T_DELETE] = {};
blockConfig[T_FOR] = {};
blockConfig[T_INDEX] = {};
blockConfig[T_REF] = {};
blockConfig[T_LAYOUT_BLOCK] = {};


blockConfig[T_BLOCK]['block label'] = "block";
blockConfig[T_GOTO]['block label'] = "block";
blockConfig[T_VAR]['block label'] = "variable";
blockConfig[T_INPUT]['block label'] = "variable";
blockConfig[T_IF]['block label'] = "if";
blockConfig[T_WHILE]['block label'] = "while";
blockConfig[T_EQUAL]['block label'] = "equal";
blockConfig[T_LESS]['block label'] = "less";
blockConfig[T_GREATER]['block label'] = "greater";
blockConfig[T_ADD]['block label'] = "add";
blockConfig[T_AVERAGE]['block label'] = "average";
blockConfig[T_SQRT]['block label'] = "sqrt";
blockConfig[T_HYPOT]['block label'] = "hypot";
blockConfig[T_SUBTRACT]['block label'] = "subtract";
blockConfig[T_MULT]['block label'] = "multiply";
blockConfig[T_DIV]['block label'] = "divide";
blockConfig[T_MOD]['block label'] = "modulus";
blockConfig[T_NOT]['block label'] = "not";
blockConfig[T_CONDITION]['block label'] = "condition";
blockConfig[T_RANGE]['block label'] = "repeats w/ count";
blockConfig[T_ELSE]['block label'] = "else";
blockConfig[T_DO]['block label'] = "do";
blockConfig[T_OUTLET]['block label'] = "out";
blockConfig[T_START]['block label'] = "start";
blockConfig[T_STOP]['block label'] = "stop";
blockConfig[T_ASSIGN]['block label'] = "assign";
blockConfig[T_CONSOLE]['block label'] = "console";
blockConfig[T_PRINT]['block label'] = "print";
blockConfig[T_COMMENT]['block label'] = "//";
blockConfig[T_CONST]['block label'] = "constant";
blockConfig[T_TURTLE]['block label'] = "turtle 200x150";
blockConfig[T_INLET]['block label'] = "inlet";
blockConfig[T_SIN]['block label'] = "sin";
blockConfig[T_COS]['block label'] = "cos";
blockConfig[T_LEN]['block label'] = "length";
blockConfig[T_GET]['block label'] = "get";
blockConfig[T_RUN]['block label'] = "run";
blockConfig[T_SET]['block label'] = "set";
blockConfig[T_ROUND]['block label'] = "round";
blockConfig[T_PUSH]['block label'] = "push";
blockConfig[T_DELETE]['block label'] = "delete";
blockConfig[T_FOR]['block label'] = "repeat";
blockConfig[T_INDEX]['block label'] = "index";
blockConfig[T_REF]['block label'] = "value";
blockConfig[T_LAYOUT_BLOCK]['block label'] = "layout cell";

blockConfig[T_BLOCK]['accept child'] = notStartOrConsoleOrSpecial;
blockConfig[T_VAR]['accept child'] = [T_COMMENT]; //nothing
blockConfig[T_INPUT]['accept child'] = [T_COMMENT]; //nothing
blockConfig[T_IF]['accept child'] = [T_CONDITION, T_DO, T_ELSE, T_COMMENT];
blockConfig[T_WHILE]['accept child'] = [T_CONDITION, T_DO, T_ELSE, T_COMMENT];
blockConfig[T_FOR]['accept child'] = [T_RANGE, T_DO, T_ELSE, T_COMMENT];
blockConfig[T_EQUAL]['accept child'] = numberyOnes.slice(1);//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT, T_ADD, T_SUBTRACT, T_MULT, T_DIV, T_MOD];
blockConfig[T_LESS]['accept child'] = numberyOnes.slice(1);//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT, T_ADD, T_SUBTRACT, T_MULT, T_DIV, T_MOD];
blockConfig[T_GREATER]['accept child'] = numberyOnes.slice(1);//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT, T_ADD, T_SUBTRACT, T_MULT, T_DIV, T_MOD];
blockConfig[T_ADD]['accept child'] = numberyOnes;//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT];
blockConfig[T_AVERAGE]['accept child'] = numberyOnes;//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT];
blockConfig[T_SIN]['accept child'] = numberyOnes;//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT];
blockConfig[T_COS]['accept child'] = numberyOnes;//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT];
blockConfig[T_SQRT]['accept child'] = numberyOnes;//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT];
blockConfig[T_ROUND]['accept child'] = numberyOnes;//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT];
blockConfig[T_SUBTRACT]['accept child'] = numberyOnes;//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT];
blockConfig[T_MULT]['accept child'] = numberyOnes;//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT];
blockConfig[T_DIV]['accept child'] = numberyOnes;//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT];
blockConfig[T_HYPOT]['accept child'] = numberyOnes;//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT];
blockConfig[T_MOD]['accept child'] = numberyOnes;//[T_OUTLET, T_VAR, T_INPUT, T_CONST, T_COMMENT];
blockConfig[T_GOTO]['accept child'] = [T_COMMENT];
blockConfig[T_NOT]['accept child'] = [...conditionallyOnes];
// blockConfig[T_NOT]['accept child'].push(T_OUTLET);
blockConfig[T_CONDITION]['accept child'] = conditionallyOnes;
blockConfig[T_RANGE]['accept child'] = [T_OUTLET, T_COMMENT, T_CONST, T_ADD, T_SUBTRACT, T_MULT, T_DIV, T_MOD, T_AVERAGE, T_SQRT, T_HYPOT, T_COS, T_SIN, T_LEN, T_GET, T_ROUND, T_LEN];
blockConfig[T_ELSE]['accept child'] = notStartOrConsole;
blockConfig[T_DO]['accept child'] = notStartOrConsole;
blockConfig[T_OUTLET]['accept child'] = [T_COMMENT];
blockConfig[T_START]['accept child'] = notStartOrConsoleOrSpecial;
blockConfig[T_START]['accept child'].push(T_BLOCK);
blockConfig[T_STOP]['accept child'] = [];
blockConfig[T_ASSIGN]['accept child'] = [T_VAR, T_CONST, T_COMMENT, T_GET];
blockConfig[T_CONSOLE]['accept child'] = [];
blockConfig[T_PRINT]['accept child'] = [T_VAR, T_INPUT, T_CONST, T_COMMENT, T_GOTO, T_BLOCK, T_GET];
blockConfig[T_COMMENT]['accept child'] = [];
blockConfig[T_CONST]['accept child'] = [T_COMMENT];
blockConfig[T_TURTLE]['accept child'] = [T_INLET];
blockConfig[T_INLET]['accept child'] = [];
blockConfig[T_LEN]['accept child'] = [];
blockConfig[T_GET]['accept child'] = [T_INDEX];
blockConfig[T_RUN]['accept child'] = [T_INDEX];
blockConfig[T_SET]['accept child'] = [T_INDEX, T_REF];
blockConfig[T_PUSH]['accept child'] = [T_REF];
blockConfig[T_DELETE]['accept child'] = [T_INDEX];
blockConfig[T_INDEX]['accept child'] = numberyOnes.slice(1);
blockConfig[T_REF]['accept child'] = numberyOnes.slice(1);
blockConfig[T_REF]['accept child'].push(T_GOTO);
blockConfig[T_LAYOUT_BLOCK]['accept child'] = presComponents;

blockConfig[T_BLOCK]['max children'] = 100;
blockConfig[T_GOTO]['max children'] = 0;
blockConfig[T_VAR]['max children'] = 0;
blockConfig[T_INPUT]['max children'] = 0;
blockConfig[T_IF]['max children'] = 3;
blockConfig[T_WHILE]['max children'] = 3;
blockConfig[T_FOR]['max children'] = 3;
blockConfig[T_EQUAL]['max children'] = 100;
blockConfig[T_LESS]['max children'] = 100;
blockConfig[T_GREATER]['max children'] = 100;
blockConfig[T_ADD]['max children'] = 100;
blockConfig[T_AVERAGE]['max children'] = 100;
blockConfig[T_SQRT]['max children'] = 2;
blockConfig[T_ROUND]['max children'] = 2;
blockConfig[T_SIN]['max children'] = 2;
blockConfig[T_COS]['max children'] = 2;
blockConfig[T_SUBTRACT]['max children'] = 100;
blockConfig[T_MULT]['max children'] = 100;
blockConfig[T_DIV]['max children'] = 100;
blockConfig[T_MOD]['max children'] = 100;
blockConfig[T_HYPOT]['max children'] = 100;
blockConfig[T_NOT]['max children'] = 100;
blockConfig[T_CONDITION]['max children'] = 100;
blockConfig[T_RANGE]['max children'] = 1;
blockConfig[T_ELSE]['max children'] = 100;
blockConfig[T_DO]['max children'] = 100;
blockConfig[T_OUTLET]['max children'] = 0;
blockConfig[T_START]['max children'] = 100;
blockConfig[T_STOP]['max children'] = 100;
blockConfig[T_ASSIGN]['max children'] = 100;
blockConfig[T_CONSOLE]['max children'] = 0;
blockConfig[T_PRINT]['max children'] = 100;
blockConfig[T_COMMENT]['max children'] = 0;
blockConfig[T_CONST]['max children'] = 0;
blockConfig[T_TURTLE]['max children'] = 3;
blockConfig[T_INLET]['max children'] = 2;
blockConfig[T_LEN]['max children'] = 1;
blockConfig[T_GET]['max children'] = 1;
blockConfig[T_RUN]['max children'] = 1;
blockConfig[T_SET]['max children'] = 2;
blockConfig[T_PUSH]['max children'] = 1;
blockConfig[T_DELETE]['max children'] = 1;
blockConfig[T_INDEX]['max children'] = 1;
blockConfig[T_REF]['max children'] = 1;
blockConfig[T_LAYOUT_BLOCK]['max children'] = 1;

var I_NONE = 0;
var I_TEXT = 1;
var I_SELECT = 2;
var I_TEXT_AREA = 3;
var I_CANVAS = 0;

blockConfig[T_BLOCK]['input type'] = I_TEXT;
blockConfig[T_GOTO]['input type'] = I_SELECT;
blockConfig[T_VAR]['input type'] = I_SELECT;
blockConfig[T_INPUT]['input type'] = I_TEXT;
blockConfig[T_IF]['input type'] = I_NONE;
blockConfig[T_WHILE]['input type'] = I_NONE;
blockConfig[T_FOR]['input type'] = I_NONE;
blockConfig[T_EQUAL]['input type'] = I_NONE;
blockConfig[T_LESS]['input type'] = I_NONE;
blockConfig[T_GREATER]['input type'] = I_NONE;
blockConfig[T_ADD]['input type'] = I_NONE;
blockConfig[T_SIN]['input type'] = I_NONE;
blockConfig[T_COS]['input type'] = I_NONE;
blockConfig[T_AVERAGE]['input type'] = I_NONE;
blockConfig[T_SQRT]['input type'] = I_NONE;
blockConfig[T_ROUND]['input type'] = I_NONE;
blockConfig[T_SUBTRACT]['input type'] = I_NONE;
blockConfig[T_MULT]['input type'] = I_NONE;
blockConfig[T_DIV]['input type'] = I_NONE;
blockConfig[T_MOD]['input type'] = I_NONE;
blockConfig[T_HYPOT]['input type'] = I_NONE;
blockConfig[T_NOT]['input type'] = I_NONE;
blockConfig[T_CONDITION]['input type'] = I_NONE;
blockConfig[T_RANGE]['input type'] = I_SELECT;
blockConfig[T_ELSE]['input type'] = I_NONE;
blockConfig[T_DO]['input type'] = I_NONE;
blockConfig[T_OUTLET]['input type'] = I_SELECT;
blockConfig[T_START]['input type'] = I_NONE;
blockConfig[T_STOP]['input type'] = I_NONE;
blockConfig[T_ASSIGN]['input type'] = I_NONE;
blockConfig[T_CONSOLE]['input type'] = I_NONE;
blockConfig[T_PRINT]['input type'] = I_NONE;
blockConfig[T_COMMENT]['input type'] = I_TEXT_AREA;
blockConfig[T_CONST]['input type'] = I_TEXT;
blockConfig[T_TURTLE]['input type'] = I_CANVAS;
blockConfig[T_INLET]['input type'] = I_NONE;
blockConfig[T_LEN]['input type'] = I_SELECT;
blockConfig[T_GET]['input type'] = I_SELECT;
blockConfig[T_RUN]['input type'] = I_SELECT;
blockConfig[T_SET]['input type'] = I_SELECT;
blockConfig[T_PUSH]['input type'] = I_SELECT;
blockConfig[T_DELETE]['input type'] = I_SELECT;
blockConfig[T_INDEX]['input type'] = I_NONE;
blockConfig[T_REF]['input type'] = I_NONE;
blockConfig[T_LAYOUT_BLOCK]['input type'] = I_TEXT;

blockConfig[T_BLOCK]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : true};
blockConfig[T_GOTO]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : true};
blockConfig[T_VAR]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_CONST, 'copy' : true};
blockConfig[T_INPUT]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : true};
blockConfig[T_IF]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_WHILE, 'copy' : true};
blockConfig[T_WHILE]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_FOR, 'copy' : true};
blockConfig[T_FOR]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_IF, 'copy' : true};
blockConfig[T_EQUAL]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_LESS, 'copy' : true};
blockConfig[T_LESS]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_GREATER, 'copy' : true};
blockConfig[T_GREATER]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_EQUAL, 'copy' : true};
blockConfig[T_ADD]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_SUBTRACT, 'copy' : true};
blockConfig[T_SUBTRACT]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_MULT, 'copy' : true};
blockConfig[T_MULT]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_DIV, 'copy' : true};
blockConfig[T_DIV]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_MOD, 'copy' : true};
blockConfig[T_MOD]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_AVERAGE, 'copy' : true};
blockConfig[T_AVERAGE]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_HYPOT, 'copy' : true};
blockConfig[T_SQRT]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : true};
blockConfig[T_HYPOT]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_ROUND, 'copy' : true};
blockConfig[T_ROUND]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_ADD, 'copy' : true};
blockConfig[T_SIN]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_COS, 'copy' : true};
blockConfig[T_COS]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_SIN, 'copy' : true};
blockConfig[T_NOT]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : true};
blockConfig[T_CONDITION]['handles'] = {'move' : false, 'resize'  : true, 'delete'  : false, 'expand'  : true, 'mutate' : -1, 'copy' : false};
blockConfig[T_RANGE]['handles'] = {'move' : false, 'resize'  : true, 'delete'  : false, 'expand'  : true, 'mutate' : -1, 'copy' : true};
blockConfig[T_ELSE]['handles'] = {'move' : false, 'resize'  : true, 'delete'  : false, 'expand'  : true, 'mutate' : -1, 'copy' : false};
blockConfig[T_DO]['handles'] = {'move' : false, 'resize'  : true, 'delete'  : false, 'expand'  : true, 'mutate' : -1, 'copy' : false};
blockConfig[T_OUTLET]['handles'] = {'move' : false, 'resize'  : false, 'delete'  : false, 'expand'  : false, 'mutate' : -1, 'copy' : true};
blockConfig[T_START]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : false, 'expand'  : true, 'mutate' : -1, 'copy' : false};
blockConfig[T_STOP]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : false};
blockConfig[T_ASSIGN]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : true};
blockConfig[T_CONSOLE]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : false, 'mutate' : -1, 'copy' : false};
blockConfig[T_PRINT]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : true};
blockConfig[T_COMMENT]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : false, 'mutate' : -1, 'copy' : true};
blockConfig[T_CONST]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_INPUT, 'copy' : true};
blockConfig[T_TURTLE]['handles'] = {'move' : true, 'resize'  : false, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : false};
blockConfig[T_INLET]['handles'] = {'move' : false, 'resize'  : false, 'delete'  : false, 'expand'  : false, 'mutate' : -1, 'copy' : true};
blockConfig[T_LEN]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : true};
blockConfig[T_GET]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_RUN, 'copy' : true};
blockConfig[T_RUN]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_DELETE, 'copy' : true};
blockConfig[T_SET]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : true};
blockConfig[T_PUSH]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : true};
blockConfig[T_DELETE]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : T_GET, 'copy' : true};
blockConfig[T_INDEX]['handles'] = {'move' : false, 'resize'  : false, 'delete'  : false, 'expand'  : false, 'mutate' : -1, 'copy' : false};
blockConfig[T_REF]['handles'] = {'move' : false, 'resize'  : false, 'delete'  : false, 'expand'  : false, 'mutate' : -1, 'copy' : false};
blockConfig[T_LAYOUT_BLOCK]['handles'] = {'move' : true, 'resize'  : true, 'delete'  : true, 'expand'  : true, 'mutate' : -1, 'copy' : true};
